
from pyrogram import filters
from pyrogram.types import Message
import requests
from .. import QuantamBot as pbot
from ..database import token_is_user as is_user,token_add_user as add_user,token_remove_user as remove_user
from MukeshAPI import api
@pbot.on_message(filters.command("token") & filters.private)
async def gen_token(_, message: Message):
    apis = f"{message.from_user.id}-mukesh-api-{api.password()}"
    if not await is_user(message.from_user.id):
        await add_user(message.from_user.id, apis)
        await message.reply_text(
            f"üîë  ú·¥á Ä·¥á …™s  è·¥è·¥ú Ä ·¥õ·¥è·¥ã·¥á…¥ “ì·¥è Ä ·¥ç·¥ú·¥ã·¥ás ú ·¥Ä·¥ò…™:\n<code>{api}</code>\n\n<b>·¥Ö·¥è…¥'·¥õ s ú·¥Ä Ä·¥á ·¥õ ú…™s ·¥õ·¥è·¥ã·¥á…¥ ·¥°…™·¥õ ú ·¥Ä…¥ è·¥è…¥·¥á ·¥á üs·¥á.</b>"
        )
    else:
        mukesh = await is_user(message.from_user.id)
        await message.reply_text(
            f"üîë  è·¥è·¥ú'·¥†·¥á ·¥Ä ü Ä·¥á·¥Ä·¥Ö è …¢·¥á…¥·¥á Ä·¥Ä·¥õ·¥á·¥Ö  è·¥è·¥ú Ä ·¥õ·¥è·¥ã·¥á…¥:\n<code>{mukesh}</code>\n\n<b>·¥Ö·¥è…¥'·¥õ s ú·¥Ä Ä·¥á ·¥õ ú…™s ·¥õ·¥è·¥ã·¥á…¥ ·¥°…™·¥õ ú ·¥Ä…¥ è·¥è…¥·¥á ·¥á üs·¥á.</b>"
        )

@pbot.on_message(filters.command("revoke") & filters.private)
async def rev_token(_, message: Message):
    if not await is_user(message.from_user.id):
        return await message.reply_text(
            f"üö´  ü·¥è·¥è·¥ãs  ü…™·¥ã·¥á  è·¥è·¥ú'·¥†·¥á …¥·¥è·¥õ …¢·¥á…¥·¥á Ä·¥Ä·¥õ·¥á·¥Ö ·¥õ·¥è·¥ã·¥á…¥  ô·¥á“ì·¥è Ä·¥á."
        )
    mukesh = await is_user(message.from_user.id)
    await remove_user(message.from_user.id, mukesh)
    await message.reply_text(
        f"<b>üîì ·¥ç·¥ú·¥ã·¥ás ú ·¥Ä·¥ò…™ ·¥õ·¥è·¥ã·¥á…¥  Ä·¥á·¥†·¥è·¥ã·¥á·¥Ö s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è.</b>\n\n è·¥è·¥ú ·¥Ñ·¥Ä…¥ …¢·¥á…¥·¥á Ä·¥Ä·¥õ·¥á  è·¥è·¥ú Ä ·¥õ·¥è·¥ã·¥á…¥ ·¥Ä…¢·¥Ä…™…¥  ô è /token"
    )

